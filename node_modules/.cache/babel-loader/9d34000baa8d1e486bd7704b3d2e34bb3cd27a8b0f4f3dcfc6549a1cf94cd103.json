{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Desktop/netflix-app/src/components/Cards.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = ({\n  movie\n}) => {\n  const dateFormateur = date => {\n    let [yy, mm, dd] = date.split(\"-\");\n    return [dd, mm, yy].join(\" / \");\n  };\n  const genreFinder = () => {\n    let genreArray = [];\n    for (let i = 0; i < movie.genre_ids.length; i++) {\n      switch (movie.genre_ids[i]) {\n        case 28:\n          genreArray.push(\"Action\");\n          break;\n        case 12:\n          genreArray.push(\"Aventure\");\n          break;\n        case 16:\n          genreArray.push(\"Animation\");\n          break;\n        case 35:\n          genreArray.push(\"Comédie\");\n          break;\n        case 80:\n          genreArray.push(\"Policier\");\n          break;\n        case 99:\n          genreArray.push(\"Documentaire\");\n          break;\n        case 18:\n          genreArray.push(\"Drame\");\n          break;\n        case 10751:\n          genreArray.push(\"Famille\");\n          break;\n        case 14:\n          genreArray.push(\"Fantasy\");\n          break;\n        case 36:\n          genreArray.push(\"Historique\");\n          break;\n        case 27:\n          genreArray.push(\"Horreur\");\n          break;\n        case 10402:\n          genreArray.push(\"Music\");\n          break;\n        case 9648:\n          genreArray.push(\"Mystère\");\n          break;\n        case 10749:\n          genreArray.push(\"Romance\");\n          break;\n        case 878:\n          genreArray.push(\"Science Fiction\");\n          break;\n        case 10770:\n          genreArray.push(\"TV Show\");\n          break;\n        case 53:\n          genreArray.push(\"Thriller\");\n          break;\n        case 10752:\n          genreArray.push(\"Guerre \");\n          break;\n        case 37:\n          genreArray.push(\"Western\");\n          break;\n        default:\n          break;\n      }\n    }\n    return genreArray.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: genre\n    }, genre, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }, this));\n  };\n  const addStorage = () => {\n    let storedData = window.localStorage.movies ? window.localStorage.movies.split(\",\") : [];\n    if (!storedData.includes(movie.id.toString())) {\n      storedData.push(movie.id);\n      window.localStorage.movies = storedData;\n    }\n  };\n  const deletStorage = () => {\n    let storedData = window.localStorage.movies.split(\",\");\n    let newData = storedData.filter(id => id !== movie.id);\n    window.localStorage.movies = newData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path ? \"https://image.tmdb.org/t/p/original\" + movie.poster_path : \"./img/poster.jpg\",\n        alt: movie.poster_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"type\",\n        children: movie.media_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Cards","movie","dateFormateur","date","yy","mm","dd","split","join","genreFinder","genreArray","i","genre_ids","length","push","map","genre","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","addStorage","storedData","window","localStorage","movies","includes","id","toString","deletStorage","newData","filter","className","src","poster_path","alt","media_type","_c","$RefreshReg$"],"sources":["/Users/victor/Desktop/netflix-app/src/components/Cards.js"],"sourcesContent":["const Cards = ({ movie }) => {\n  const dateFormateur = (date) => {\n    let [yy, mm, dd] = date.split(\"-\");\n    return [dd, mm, yy].join(\" / \");\n  };\n\n  const genreFinder = () => {\n    let genreArray = [];\n\n    for (let i = 0; i < movie.genre_ids.length; i++) {\n      switch (movie.genre_ids[i]) {\n        case 28:\n          genreArray.push(\"Action\");\n          break;\n        case 12:\n          genreArray.push(\"Aventure\");\n          break;\n        case 16:\n          genreArray.push(\"Animation\");\n          break;\n        case 35:\n          genreArray.push(\"Comédie\");\n          break;\n        case 80:\n          genreArray.push(\"Policier\");\n          break;\n        case 99:\n          genreArray.push(\"Documentaire\");\n          break;\n        case 18:\n          genreArray.push(\"Drame\");\n          break;\n        case 10751:\n          genreArray.push(\"Famille\");\n          break;\n        case 14:\n          genreArray.push(\"Fantasy\");\n          break;\n        case 36:\n          genreArray.push(\"Historique\");\n          break;\n        case 27:\n          genreArray.push(\"Horreur\");\n          break;\n        case 10402:\n          genreArray.push(\"Music\");\n          break;\n        case 9648:\n          genreArray.push(\"Mystère\");\n          break;\n        case 10749:\n          genreArray.push(\"Romance\");\n          break;\n        case 878:\n          genreArray.push(\"Science Fiction\");\n          break;\n        case 10770:\n          genreArray.push(\"TV Show\");\n          break;\n        case 53:\n          genreArray.push(\"Thriller\");\n          break;\n        case 10752:\n          genreArray.push(\"Guerre \");\n          break;\n        case 37:\n          genreArray.push(\"Western\");\n          break;\n        default:\n          break;\n      }\n    }\n    return genreArray.map((genre) => <li key={genre}>{genre}</li>);\n  };\n\n  const addStorage = () => {\n    let storedData = window.localStorage.movies\n      ? window.localStorage.movies.split(\",\")\n      : [];\n\n    if (!storedData.includes(movie.id.toString())) {\n      storedData.push(movie.id);\n      window.localStorage.movies = storedData;\n    }\n  };\n\n  const deletStorage = () => {\n    let storedData = window.localStorage.movies.split(\",\");\n    let newData = storedData.filter((id) => id !== movie.id);\n\n    window.localStorage.movies = newData;\n  };\n\n  return (\n    <div className=\"cards\">\n      <div className=\"img-container\">\n        <img\n          src={\n            movie.poster_path\n              ? \"https://image.tmdb.org/t/p/original\" + movie.poster_path\n              : \"./img/poster.jpg\"\n          }\n          alt={movie.poster_path}\n        />\n        <p className=\"type\">{movie.media_type}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}